{
    "swagger": "2.0",
    "info": {
        "description": "API to manage events including Creation and Approval.",
        "title": "Event Management System API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Sutanto Adi Nugroho",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login with username and password to obtain authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/event": {
            "post": {
                "description": "Create a new event with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003cyour-token-here\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Event data. Propose date format should be ['dd-mm-yyyy', 'dd-mm-yyyy']",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEventDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request: Missing required fields",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/event/by-user/{userId}": {
            "get": {
                "description": "Get the list of events that a user is involved in, with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Show events by user involvement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003cyour-token-here\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event name filter",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event status filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/dto.PaginationResponse"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "content": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/response.EventResponse"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/event/{eventId}": {
            "get": {
                "description": "Get the details of a specific event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get event details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003cyour-token-here\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.EventDetailResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/event/{eventId}/approval": {
            "put": {
                "description": "Approve or reject an event by changing its status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Update the approval status of an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003cyour-token-here\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Approval data. Status should be 'Approved' or 'Rejected'",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EventApprovalDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid status",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/user/vendors": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the list of all vendors, optionally filtered by full name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all vendors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003cyour-token-here\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter vendors by full name",
                        "name": "fullName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendors retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.VendorsResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.PaginationData": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "dto.PaginationResponse": {
            "type": "object",
            "properties": {
                "content": {},
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationData"
                }
            }
        },
        "dto.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "request.CreateEventDto": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "proposedDates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "request.EventApprovalDto": {
            "type": "object",
            "properties": {
                "confirmedDate": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.LoginDto": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.EventDetailResponse": {
            "type": "object",
            "properties": {
                "confirmedDate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "fullLocation": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "locationPostalCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "proposedDates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                }
            }
        },
        "response.EventResponse": {
            "type": "object",
            "properties": {
                "confirmedDate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "proposedDates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.VendorsResponse": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}